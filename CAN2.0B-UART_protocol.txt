The following is the CAN2.0B(29 bit CAN-ID)-UART conversion protocol, used for Robstride & Xiaomi cybergear.
Refer to : https://github.com/belovictor/cybergear-docs/blob/main/instructionmanual/instructionmanual.md

## CAN COMMAND ##
Usually, interface for CAN command requires two parameters : CAN-ID, CAN-MESSAGE.
CAN-ID : Contains information about master ID, slave ID, communication type, etc.
CAN-MESSAGE : Contains actual data : motor position, speed, torque, etc.

## UART COMMAND ##

Basically, It "hugs" the CAN command with AT command : AT + CAN COMMAND + \r\n.

UART command structure : "AT" (1-byte) / 29-bit CAN ID (4-byte) / Message Length (1-byte) / CAN-MESSAGE (<Message Length>-byte) / "\r\n" (1-byte)
NOTE : All bytes are in the hexadecimal format.
Example : 41 54 / 00 07 e8 0c / 01 / 00 / 0d 0a
Example : 41 54 / 18 07 e8 0c / 08 / 00 00 00 00 00 00 00 00 / 0d 0a

CAN ID (4-byte)
ww xx yy zz : 8bit hexadecimal x 4 = 32bit (Note : 1byte = 8bit), where
ww : Communication type (5bit) in hexadecimal
xx yy : Data area2 (16bit) in hexadecimal 
zz : Target address(8bit) in hexadecimal

Example : Enable motor  
Parameters :
 1. Communication Type : 3
 2. motor_id = 1
 3. host_id = 2024 (by SAE J1979 OBD-II standard)
CAN-ID : 18 07 e8 0c
Logic : 
 1. 18 07 e8 0c (Hexadecimal) = 00011000 00000111 11101000 00001100 (Binary) 
 2. Remove the first three bits on the left, since the CAN-ID for CAN2.0B communication format is 29 bit : 11000 00000111 11101000 00001100 000
 3. Parse : 11000 / 0000011111101000 / 00001100 / 000 : Communication type(5bit) / Data area2(16bit) / Target address(8bit) / Discard (3bit)
  3.1. Communication type : 11000 (Binary) = 18 (Hexadecimal) = 24 (Decimal)
  3.2. Data area2 : 0000011111101000 (Binary) = 07e8 (Hexadecimal) = 2024 (Decimal)
  3.3. Target address : 00001100 (Binary) = 0c (Hexadecimal) = 12 (Decimal)
 4. Process message :
  4.1. Communication type : 24/8 = 3 (Remove the effect of 3-bit erasing, since (binary)<<3 =(decimal)/8
  4.2. Data area2 : No need to change
  4.3. Target address : [(decimal)-4]/8 (Again,remove the effect of 3-bit erasing)

Note : before communication, one needs to process handshake message, which consists of :
41 54 2b 41 54 0d 0a : A T + A T \r \n
